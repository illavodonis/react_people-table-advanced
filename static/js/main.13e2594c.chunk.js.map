{"version":3,"sources":["components/Header/Header.tsx","components/HomePage/HomePage.tsx","components/NotFoundPage/NotFoundPage.tsx","api/api.ts","components/Loader/Loader.tsx","components/PersonName/PersonName.tsx","components/PersonRow/PersonRow.tsx","utils/searchHelper.ts","components/FilterByName/FilterByName.tsx","components/FilterByCentury/FilterByCentury.tsx","components/FilterBySex/FilterBySex.tsx","components/PeopleTable/PeopleTable.tsx","components/PeopleList/PeopleList.tsx","App.tsx","index.tsx"],"names":["Header","search","useLocation","className","to","id","isActive","pathname","HomePage","NotFoundPage","getPeople","a","fetch","response","json","Response","error","Loader","PersonName","person","slug","classNames","sex","name","PersonRow","useParams","born","died","mother","motherName","father","getSearchWith","currentParams","parmsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","FilterByName","useSearchParams","searchParams","setSearchParams","useState","targetValue","setTargetValue","applyQuery","useCallback","lodash","debounce","query","type","placeholder","onChange","event","target","allowableCenturies","FilterByCentury","centuries","getAll","map","century","includes","onClick","centuryForFilter","filter","selectedCentury","length","FilterBySex","get","PeopleTable","people","peopleList","setPeopleList","sortOrder","sortBy","visiblePeople","lowerQuery","toLocaleLowerCase","fatherName","Math","ceil","sort","nextPerson","localeCompare","Number","handleSort","sortByValue","currentTarget","textContent","src","alt","PeopleList","peopleFromServer","resultPeopleList","_","personList","getMother","find","PossiblyMother","getFather","PossiblyFather","useEffect","loader","App","path","element","index","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.13e2594c.chunk.js","sourcesContent":["import { FC } from 'react';\nimport { Link, NavLink, useLocation } from 'react-router-dom';\n\nexport const Header:FC = () => {\n  const { search } = useLocation();\n\n  return (\n    <nav className=\"navbar\">\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <Link className=\"navbar-item\" to=\"/home\">\n            <span className=\"is-size-1\">Home</span>\n          </Link>\n        </div>\n        <div id=\"navbarMenuHeroB\" className=\"navbar-menu\">\n          <div className=\"navbar-end\">\n            <NavLink\n              to=\"/\"\n              className={({ isActive }) => {\n                return (isActive ? 'navbar-item is-active' : 'navbar-item');\n              }}\n            >\n              Home page\n            </NavLink>\n\n            <NavLink\n              to={{\n                pathname: 'people',\n                search,\n              }}\n              className={({ isActive }) => {\n                return (isActive ? 'navbar-item is-active' : 'navbar-item');\n              }}\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport const HomePage: React.FC = () => (\n  <div className=\"hero-body\">\n    <div className=\"container has-text-centered\">\n      <p className=\"title\">\n        People Population\n      </p>\n\n      <p className=\"subtitle\">\n        <Link to=\"/people\">Start</Link>\n      </p>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nexport const NotFoundPage: React.FC = () => (\n  <div className=\"hero-body\">\n    <div className=\"container has-text-centered\">\n      <h2 className=\"title is-size-1\">\n        Ooops !!!\n      </h2>\n\n      <p className=\"subtitle\">\n        Page not found\n      </p>\n    </div>\n  </div>\n);\n","// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport const getPeople = async (): Promise<Person[] | Response> => {\n  try {\n    const response = await fetch(BASE_URL);\n\n    return await response.json();\n  } catch {\n    return Response.error();\n  }\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\ninterface Props {\n  person: Person\n}\n\nexport const PersonName: React.FC<Props> = ({ person }) => {\n  const { search } = useLocation();\n\n  return (\n    <Link\n      to={{\n        pathname: `/people/${person.slug}`,\n        search,\n      }}\n      className={classNames({\n        'has-text-danger': person.sex === 'f',\n        'has-text-info': person.sex === 'm',\n      })}\n    >\n      {person.name}\n    </Link>\n  );\n};\n\nexport default PersonName;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { PersonName } from '../PersonName';\n\ninterface Props {\n  person: Person\n\n}\n\nexport const PersonRow: React.FC<Props> = ({ person }) => {\n  const { slug } = useParams();\n\n  return (\n\n    <tr\n      className={classNames({\n        'has-background-warning': person.slug === slug,\n      })}\n    >\n      <td><PersonName person={person} /></td>\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>\n        { person.mother\n          ? <PersonName person={person.mother} />\n          : <b>{person.motherName}</b>}\n      </td>\n      <td>\n        { person.father\n          ? <PersonName person={person.father} />\n          : <b>{person.motherName}</b>}\n      </td>\n    </tr>\n  );\n};\n","export type SearchParams = {\n  [key: string]: string | string[] | null\n};\n\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  parmsToUpdate: SearchParams,\n): string {\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  Object.entries(parmsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        // we delete the key to remove old values\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  return newParams.toString();\n}\n","import lodash from 'lodash';\nimport { FC, useCallback, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getSearchWith } from '../../utils/searchHelper';\n\nexport const FilterByName: FC = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [targetValue, setTargetValue] = useState('');\n\n  const applyQuery = useCallback(\n    lodash.debounce(\n      (value: string) => {\n        setSearchParams(\n          getSearchWith(searchParams, { query: value }),\n        );\n      }, 500,\n    ), [],\n  );\n\n  return (\n    <div className=\"panel-block\">\n      <p className=\"control has-icons-left\">\n        <input\n          className=\"input\"\n          type=\"text\"\n          placeholder=\"Search\"\n          value={targetValue}\n          onChange={event => {\n            setTargetValue(event.target.value);\n            applyQuery(targetValue);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-search\" aria-hidden=\"true\" />\n        </span>\n      </p>\n    </div>\n  );\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getSearchWith } from '../../utils/searchHelper';\n\nconst allowableCenturies = ['16', '17', '18', '19', '20'];\n\nexport const FilterByCentury: React.FC = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const centuries = searchParams.getAll('centuries');\n\n  const onCenturyFilter = (centuryForFilter: string) => {\n    setSearchParams(\n      getSearchWith(searchParams, {\n        centuries: centuries.includes(centuryForFilter)\n          ? centuries.filter(selectedCentury => {\n            return selectedCentury !== centuryForFilter;\n          })\n          : [...centuries, centuryForFilter],\n      }),\n    );\n  };\n\n  return (\n    <div className=\"panel-block is-flex-direction-column\">\n      <div className=\"buttons is-justify-content-center\">\n        {allowableCenturies.map(century => (\n          <button\n            key={century}\n            type=\"button\"\n            className={\n              classNames(\n                'button',\n                { 'is-success': centuries.includes(century) },\n              )\n            }\n            onClick={() => onCenturyFilter(century)}\n          >\n            {century}\n          </button>\n        ))}\n        <button\n          type=\"button\"\n          className={\n            classNames(\n              'button',\n              { 'is-success': centuries.length === 0 },\n            )\n          }\n          onClick={() => setSearchParams(\n            getSearchWith(searchParams, { centuries: [] }),\n          )}\n        >\n          Show All\n        </button>\n      </div>\n    </div>\n\n  );\n};\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { getSearchWith } from '../../utils/searchHelper';\n\nexport const FilterBySex: FC = () => {\n  const [searchParams] = useSearchParams();\n  const sex = searchParams.get('sex');\n\n  return (\n    <p className=\"panel-tabs\">\n      <Link\n        to={{ search: getSearchWith(searchParams, { sex: '' }) }}\n        className={classNames({ 'is-active': !sex })}\n      >\n        All\n      </Link>\n      <Link\n        to={{ search: getSearchWith(searchParams, { sex: 'm' }) }}\n        className={classNames({ 'is-active': sex === 'm' })}\n      >\n        Male\n      </Link>\n      <Link\n        to={{ search: getSearchWith(searchParams, { sex: 'f' }) }}\n        className={classNames({ 'is-active': sex === 'f' })}\n      >\n        Female\n      </Link>\n    </p>\n\n  );\n};\n","import './PeopleTabel.scss';\nimport React, { useState } from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { PersonRow } from '../PersonRow';\nimport { FilterByName } from '../FilterByName';\nimport { FilterByCentury } from '../FilterByCentury';\nimport { FilterBySex } from '../FilterBySex';\nimport { getSearchWith } from '../../utils/searchHelper';\n\ninterface Props {\n  people: Person[]\n}\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const [peopleList, setPeopleList] = useState<Person[]>(people);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const centuries = searchParams.getAll('centuries') || [];\n  const sex = searchParams.get('sex') || '';\n  const query = searchParams.get('query') || '';\n  const sortOrder = searchParams.get('sortOrder') || '';\n  const sortBy = searchParams.get('sortBy') || '';\n\n  let visiblePeople = [...peopleList];\n\n  if (sex) {\n    visiblePeople = visiblePeople.filter(person => person.sex === sex);\n  }\n\n  if (query) {\n    const lowerQuery = query.toLocaleLowerCase();\n\n    visiblePeople = visiblePeople.filter(person => {\n      return person.name.toLocaleLowerCase().includes(lowerQuery)\n        || (person.motherName\n          && person.motherName.toLocaleLowerCase().includes(lowerQuery))\n        || (person.fatherName\n          && person.fatherName.toLocaleLowerCase().includes(lowerQuery));\n    });\n  }\n\n  if (centuries.length !== 0) {\n    visiblePeople = visiblePeople.filter(person => {\n      return centuries.includes(Math.ceil(person.born / 100).toString());\n    });\n  }\n\n  if (sortBy) {\n    switch (sortBy) {\n      case 'name':\n      case 'sex':\n        visiblePeople.sort((person, nextPerson) => (\n          sortOrder === 'asc'\n            ? person[sortBy].localeCompare(nextPerson[sortBy])\n            : nextPerson[sortBy].localeCompare(person[sortBy])\n\n        ));\n        break;\n      case 'born':\n      case 'died':\n        visiblePeople.sort((person, nextPerson) => (\n          sortOrder === 'asc'\n            ? Number(person[sortBy]) - Number(nextPerson[sortBy])\n            : Number(nextPerson[sortBy]) - Number(person[sortBy])\n        ));\n        break;\n      default:\n        break;\n    }\n  }\n\n  const handleSort = (sortByValue: string | null) => {\n    if (sortByValue && sortOrder === '') {\n      setSearchParams(getSearchWith(\n        searchParams,\n        {\n          sortOrder: 'asc',\n          sortBy: sortByValue,\n        },\n      ));\n    }\n\n    if (sortByValue && sortOrder === 'desc') {\n      setSearchParams(getSearchWith(\n        searchParams,\n        {\n          sortOrder: 'asc',\n          sortBy: sortByValue,\n        },\n      ));\n    }\n\n    if (sortByValue && sortOrder === 'asc') {\n      setSearchParams(getSearchWith(\n        searchParams,\n        {\n          sortOrder: 'desc',\n          sortBy: sortByValue,\n        },\n      ));\n    }\n  };\n\n  return (\n    <>\n      <div className=\"block\">\n        <nav className=\"panel\">\n          <p className=\"panel-heading\">\n            Filters\n          </p>\n\n          <FilterBySex />\n\n          <FilterByName />\n\n          <FilterByCentury />\n\n          <div className=\"panel-block\">\n            <Link\n              to=\"/people\"\n              type=\"button\"\n              className=\"button is-primary is-rounded is-fullwidth\"\n              onClick={() => {\n                setSearchParams('');\n                setPeopleList(people);\n              }}\n            >\n              Reset all filters\n            </Link>\n          </div>\n        </nav>\n      </div>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th\n              onClick={(event) => {\n                handleSort(event.currentTarget.textContent);\n              }}\n            >\n              <span>name</span>\n              {\n                // eslint-disable-next-line no-nested-ternary\n                !sortOrder || sortBy !== 'name'\n                  ? <img src=\"images/sort_both.png\" alt=\"Not Sort\" />\n                  : sortOrder === 'asc' && sortBy === 'name'\n                    ? <img src=\"images/sort_asc.png\" alt=\"Sort ascending\" />\n                    : <img src=\"images/sort_desc.png\" alt=\"Sort\" />\n              }\n            </th>\n            <th\n              onClick={(event) => {\n                handleSort(event.currentTarget.textContent);\n              }}\n            >\n              <span>sex</span>\n              {\n                // eslint-disable-next-line no-nested-ternary\n                !sortOrder || sortBy !== 'sex'\n                  ? <img src=\"images/sort_both.png\" alt=\"Not Sort\" />\n                  : sortOrder === 'asc' && sortBy === 'sex'\n                    ? <img src=\"images/sort_asc.png\" alt=\"Sort ascending\" />\n                    : <img src=\"images/sort_desc.png\" alt=\"Sort descending\" />\n\n              }\n            </th>\n            <th\n              onClick={(event) => {\n                handleSort(event.currentTarget.textContent);\n              }}\n            >\n              <span>born</span>\n              {\n                // eslint-disable-next-line no-nested-ternary\n                !sortOrder || sortBy !== 'born'\n                  ? <img src=\"images/sort_both.png\" alt=\"Not Sort\" />\n                  : sortOrder === 'asc' && sortBy === 'born'\n                    ? <img src=\"images/sort_asc.png\" alt=\"Sort ascending\" />\n                    : <img src=\"images/sort_desc.png\" alt=\"Sort\" />\n\n              }\n            </th>\n            <th\n              onClick={(event) => {\n                handleSort(event.currentTarget.textContent);\n              }}\n            >\n              <span>died</span>\n              {\n                // eslint-disable-next-line no-nested-ternary\n                !sortOrder || sortBy !== 'died'\n                  ? <img src=\"images/sort_both.png\" alt=\"Not Sort\" />\n                  : sortOrder === 'asc' && sortBy === 'died'\n                    ? <img src=\"images/sort_asc.png\" alt=\"Sort ascending\" />\n                    : <img src=\"images/sort_desc.png\" alt=\"Sort\" />\n\n              }\n            </th>\n            <th>mother</th>\n            <th>father</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {visiblePeople.map(person => (\n            <PersonRow person={person} key={person.slug} />\n          ))}\n\n        </tbody>\n      </table>\n\n    </>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { getPeople } from '../../api/api';\nimport { Loader } from '../Loader';\nimport { PeopleTable } from '../PeopleTable';\n\nexport const PeopleList: React.FC = () => {\n  const [peopleList, setPeopleList] = useState<Person[]>([]);\n\n  async function loader() {\n    const peopleFromServer = await getPeople();\n\n    if (Array.isArray(peopleFromServer)) {\n      const resultPeopleList = peopleFromServer\n        .map((person, _, personList) => {\n          const getMother = personList.find(PossiblyMother => (\n            PossiblyMother.name === person.motherName\n          ));\n          const getFather = personList.find(PossiblyFather => (\n            PossiblyFather.name === person.fatherName\n          ));\n\n          return {\n            ...person,\n            mother: getMother || null,\n            father: getFather || null,\n          };\n        });\n\n      setPeopleList(resultPeopleList);\n    }\n  }\n\n  useEffect(() => {\n    loader();\n  }, []);\n\n  return (\n\n    <div className=\"container\">\n      { peopleList.length === 0\n        ? <Loader />\n        : <PeopleTable people={peopleList} />}\n    </div>\n  );\n};\n","import {\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport './App.scss';\nimport { Header } from './components/Header';\nimport { HomePage } from './components/HomePage';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { PeopleList } from './components/PeopleList';\n\nconst App = () => (\n  <section className=\"hero is-info is-fullheight\">\n    <div className=\"hero-head\">\n      <Header />\n    </div>\n\n    <Routes>\n      <Route path=\"/\" element={<HomePage />} />\n      <Route path=\"home\" element={<Navigate to=\"/\" />} />\n      <Route path=\"people\">\n        <Route index element={<PeopleList />} />\n        <Route path=\":slug\" element={<PeopleList />} />\n      </Route>\n      <Route path=\"*\" element={<NotFoundPage />} />\n    </Routes>\n\n  </section>\n);\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}